{"version":3,"sources":["components/NewTaskForm/index.js","components/NewTaskForm/new-task-form.js","components/Task/index.js","components/Task/task.js","components/TaskList/index.js","components/TaskList/task-list.js","components/TaskFilter/index.js","components/TaskFilter/task-filter.js","components/Footer/index.js","components/Footer/footer.js","components/App/index.js","components/App/app.js","index.js"],"names":["NewTaskForm","state","description","onDescriptionChange","e","setState","target","value","onSubmit","preventDefault","props","onAdded","this","className","type","onChange","placeholder","autoFocus","Component","Task","onDeleted","id","onToggleDone","onToggleEdit","done","onEditTask","edit","time","checked","timer","formatDistanceToNowStrict","classNames","onClick","defaultValue","onKeyDown","TaskList","todos","filter","elem","all","map","item","itemProps","active","completed","TaskFilter","onFilterTarget","Footer","doneCount","todoCount","showActiveTask","showCompletedTask","deleteCompletedTask","App","maxId","taskData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","key","oldItem","showAllTask","console","log","arrChilds","parentNode","childNodes","forEach","i","arr","firstChild","Date","now","propName","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.52d863fb.chunk.js","sourcesContent":["import NewTaskForm from \"./new-task-form\";\r\n\r\nexport default NewTaskForm;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class NewTaskForm extends Component {\r\n  state = {\r\n    description: \"\",\r\n  };\r\n  onDescriptionChange = (e) => {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAdded(this.state.description);\r\n    this.setState({\r\n      description: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          className=\"new-todo\"\r\n          type=\"text\"\r\n          onChange={this.onDescriptionChange}\r\n          placeholder=\"следующий шаг в захвате мира\"\r\n          autoFocus\r\n          value={this.state.description}\r\n        ></input>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import Task from \"./task\";\r\n\r\nexport default Task;\r\n","import React, { Component } from \"react\";\r\nimport { formatDistanceToNowStrict } from \"date-fns\";\r\n\r\nexport default class Task extends Component {\r\n  render() {\r\n    let {\r\n      description,\r\n      onDeleted,\r\n      id,\r\n      onToggleDone,\r\n      onToggleEdit,\r\n      done,\r\n      onEditTask,\r\n      edit,\r\n      time,\r\n      checked,\r\n    } = this.props;\r\n\r\n    let timer = formatDistanceToNowStrict(time);\r\n\r\n    let classNames = \"\";\r\n\r\n    if (edit) {\r\n      classNames = \"editing\";\r\n    }\r\n    if (done) {\r\n      classNames = \"completed\";\r\n    }\r\n    if (!done) {\r\n      checked = false;\r\n    }\r\n\r\n    return (\r\n      <li key={id} className={classNames}>\r\n        <div className=\"view\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            onClick={onToggleDone}\r\n            checked={checked}\r\n          ></input>\r\n          <label>\r\n            <span className=\"description\">{description}</span>\r\n            <span className=\"created\">создано {timer} назад</span>\r\n          </label>\r\n          <button className=\"icon icon-edit\" onClick={onToggleEdit}></button>\r\n          <button className=\"icon icon-destroy\" onClick={onDeleted}></button>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"edit\"\r\n          defaultValue={description}\r\n          onKeyDown={onEditTask}\r\n        ></input>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import TaskList from \"./task-list\";\r\n\r\nexport default TaskList;\r\n","import Task from \"../Task\";\r\n\r\nconst TaskList = ({\r\n  todos,\r\n\r\n  filter,\r\n  onDeleted,\r\n  onToggleDone,\r\n  onToggleEdit,\r\n  onEditTask,\r\n}) => {\r\n  const checked = true;\r\n\r\n  let elem = null;\r\n  if (filter.all) {\r\n    elem = todos.map((item) => {\r\n      const { id, ...itemProps } = item;\r\n      return (\r\n        <Task\r\n          key={id}\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n          onToggleEdit={() => onToggleEdit(id)}\r\n          onEditTask={(e) => onEditTask(id, e)}\r\n          checked={checked}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  if (filter.active) {\r\n    let filterArr = todos.filter((item) => {\r\n      if (!item.done) {\r\n        return item;\r\n      }\r\n    });\r\n    elem = filterArr.map((item) => {\r\n      const { id, ...itemProps } = item;\r\n      return (\r\n        <Task\r\n          key={id}\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n          onToggleEdit={() => onToggleEdit(id)}\r\n          onEditTask={(e) => onEditTask(id, e)}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  if (filter.completed) {\r\n    let filterArr = todos.filter((item) => {\r\n      if (item.done) {\r\n        return item;\r\n      }\r\n    });\r\n    elem = filterArr.map((item) => {\r\n      const { id, ...itemProps } = item;\r\n      return (\r\n        <Task\r\n          key={id}\r\n          {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n          onToggleEdit={() => onToggleEdit(id)}\r\n          onEditTask={(e) => onEditTask(id, e)}\r\n          checked={checked}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  return <ul className=\"todo-list\">{elem}</ul>;\r\n};\r\n\r\nexport default TaskList;\r\n","import TaskFilter from \"./task-filter\";\r\n\r\nexport default TaskFilter;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TaskFilter extends Component {\r\n  state = {\r\n    all: true,\r\n    active: false,\r\n    completed: false,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      // showActiveTask,\r\n      // showCompletedTask,\r\n      // showAllTask,\r\n      onFilterTarget,\r\n    } = this.props;\r\n\r\n    let classNames = \"selected\";\r\n\r\n    return (\r\n      <ul className=\"filters\" onClick={onFilterTarget}>\r\n        <li>\r\n          <button className={classNames}>Все</button>\r\n        </li>\r\n        <li>\r\n          <button>Актив</button>\r\n        </li>\r\n        <li>\r\n          <button>Завершен</button>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import Footer from \"./footer\";\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nimport TaskFilter from \"../TaskFilter\";\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    const {\r\n      doneCount,\r\n      todoCount,\r\n      showActiveTask,\r\n      showCompletedTask,\r\n      //showAllTask,\r\n      onFilterTarget,\r\n      deleteCompletedTask,\r\n    } = this.props;\r\n    return (\r\n      <footer className=\"footer\">\r\n        <span className=\"todo-count\">сделано: {doneCount}</span>\r\n        <span className=\"todo-count\"> осталось: {todoCount}</span>\r\n        <TaskFilter\r\n          showActiveTask={() => showActiveTask(\"done\")}\r\n          showCompletedTask={() => showCompletedTask(\"done\")}\r\n          //showAllTask={() => showAllTask()}\r\n          onFilterTarget={(e) => onFilterTarget(e)}\r\n        />\r\n        <button className=\"clear-completed\" onClick={deleteCompletedTask}>\r\n          Удалить завершенные\r\n        </button>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import App from \"./app\";\r\n\r\nexport default App;\r\n","import NewTaskForm from \"../NewTaskForm\";\r\nimport TaskList from \"../TaskList\";\r\nimport Footer from \"../Footer\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    taskData: [\r\n      this.createTodoItem(\"помыть пол\"),\r\n      this.createTodoItem(\"съесть вкусняшку\"),\r\n      this.createTodoItem(\"почесать лопатку\"),\r\n    ],\r\n    filter: { all: true, active: false, completed: false },\r\n  };\r\n\r\n  createTodoItem(description) {\r\n    return {\r\n      description,\r\n      done: false,\r\n      time: Date.now(),\r\n      edit: false,\r\n      id: this.maxId++,\r\n      text: this.props.description,\r\n    };\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ taskData }) => {\r\n      const idx = taskData.findIndex((el) => el.id === id);\r\n\r\n      const newArray = [...taskData.slice(0, idx), ...taskData.slice(idx + 1)];\r\n\r\n      return {\r\n        taskData: newArray,\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    //gen id\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ taskData }) => {\r\n      const newArr = [...taskData, newItem];\r\n\r\n      return {\r\n        taskData: newArr,\r\n      };\r\n    });\r\n  };\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ taskData }) => {\r\n      return {\r\n        taskData: this.toggleProperty(taskData, id, \"done\"),\r\n      };\r\n    });\r\n  };\r\n  onToggleEdit = (id) => {\r\n    this.setState(({ taskData }) => {\r\n      return {\r\n        taskData: this.toggleProperty(taskData, id, \"edit\"),\r\n      };\r\n    });\r\n  };\r\n\r\n  onEditTask = (id, e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.onToggleEdit(id);\r\n    }\r\n    this.setState(({ taskData }) => {\r\n      const idx = taskData.findIndex((el) => el.id === id);\r\n      const oldItem = taskData[idx];\r\n      const newItem = { ...oldItem, description: e.target.value };\r\n\r\n      const newArray = [\r\n        ...taskData.slice(0, idx),\r\n        newItem,\r\n        ...taskData.slice(idx + 1),\r\n      ];\r\n\r\n      return {\r\n        taskData: newArray,\r\n      };\r\n    });\r\n  };\r\n  deleteCompletedTask = () => {\r\n    this.setState(({ taskData }) => {\r\n      const taskArr = taskData.filter((el) => !el.done);\r\n\r\n      return {\r\n        taskData: taskArr,\r\n      };\r\n    });\r\n  };\r\n\r\n  showActiveTask = () => {\r\n    this.setState(({ taskData }) => {\r\n      const taskArr = taskData.filter((el) => !el.done);\r\n\r\n      return {\r\n        active: taskArr,\r\n      };\r\n    });\r\n  };\r\n\r\n  showCompletedTask = () => {\r\n    this.setState(({ taskData }) => {\r\n      const taskArr = taskData.filter((el) => el.done);\r\n\r\n      return {\r\n        completed: taskArr,\r\n      };\r\n    });\r\n  };\r\n\r\n  showAllTask = () => {\r\n    this.setState(({ taskData }) => {\r\n      let newArray = [...taskData];\r\n\r\n      return {\r\n        all: newArray,\r\n      };\r\n    });\r\n    console.log(this.state.all);\r\n  };\r\n\r\n  onFilterTarget = (e) => {\r\n    const item = e.target.parentNode.parentNode;\r\n    const arrChilds = item.childNodes;\r\n    e.target.className = \"selected\";\r\n    let id = 0;\r\n    arrChilds.forEach((item, i, arr) => {\r\n      if (item.firstChild !== e.target) {\r\n        item.firstChild.className = \"\";\r\n      } else {\r\n        id = i;\r\n      }\r\n    });\r\n    if (id === 0) {\r\n      this.setState(({ filter }) => {\r\n        filter.all = true;\r\n        filter.active = false;\r\n        filter.completed = false;\r\n      });\r\n      this.showAllTask();\r\n    }\r\n    if (id === 1) {\r\n      this.setState(({ filter }) => {\r\n        filter.all = false;\r\n        filter.active = true;\r\n        filter.completed = false;\r\n      });\r\n      this.showActiveTask();\r\n    }\r\n    if (id === 2) {\r\n      this.setState(({ filter }) => {\r\n        filter.all = false;\r\n        filter.active = false;\r\n        filter.completed = true;\r\n      });\r\n      this.showCompletedTask();\r\n      console.log(this.state);\r\n    }\r\n    console.log(id);\r\n  };\r\n\r\n  render() {\r\n    const { taskData, filter, all, active, completed } = this.state;\r\n    const doneCount = taskData.filter((el) => el.done).length;\r\n    //const actives = taskData.filter((el) => !el.done);\r\n    const todoCount = taskData.length - doneCount;\r\n\r\n    return (\r\n      <section className=\"todoapp\">\r\n        <div className=\"header\">\r\n          <h1>Че делать?</h1>\r\n        </div>\r\n        <NewTaskForm onAdded={this.addItem} />\r\n        <TaskList\r\n          todos={taskData}\r\n          filter={filter}\r\n          all={all}\r\n          active={active}\r\n          completed={completed}\r\n          onDeleted={(id) => this.deleteItem(id)}\r\n          onToggleDone={this.onToggleDone}\r\n          onToggleEdit={this.onToggleEdit}\r\n          onEditTask={this.onEditTask}\r\n        />\r\n        <Footer\r\n          doneCount={doneCount}\r\n          todoCount={todoCount}\r\n          showActiveTask={this.showActiveTask}\r\n          showCompletedTask={this.showCompletedTask}\r\n          //showAllTask={this.showAllTask}\r\n          onFilterTarget={this.onFilterTarget}\r\n          deleteCompletedTask={this.deleteCompletedTask}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\".root\"));\n"],"sourceRoot":""}