{"version":3,"sources":["components/NewTaskForm/index.js","components/NewTaskForm/new-task-form.js","components/Task/index.js","components/Task/task.js","components/TaskList/index.js","components/TaskList/task-list.js","components/TaskFilter/index.js","components/TaskFilter/task-filter.js","components/Footer/index.js","components/Footer/footer.js","components/App/index.js","components/App/app.js","index.js"],"names":["NewTaskForm","state","description","onDescriptionChange","e","setState","target","value","onSubmit","preventDefault","props","onAdded","this","className","type","onChange","placeholder","autoFocus","Component","Task","onDeleted","id","onToggleDone","onToggleEdit","done","onEditTask","classNames","edit","onClick","defaultValue","onKeyDown","TaskList","todos","elem","map","item","itemProps","TaskFilter","showActiveTask","showCompletedTask","showAllTask","Footer","doneCount","todoCount","App","maxId","taskData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","key","oldItem","propName","filter","arr","length","active","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f4f9f2a9.chunk.js","sourcesContent":["import NewTaskForm from \"./new-task-form\";\r\n\r\nexport default NewTaskForm;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class NewTaskForm extends Component {\r\n  state = {\r\n    description: \"\",\r\n  };\r\n  onDescriptionChange = (e) => {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAdded(this.state.description);\r\n    this.setState({\r\n      description: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          className=\"new-todo\"\r\n          type=\"text\"\r\n          onChange={this.onDescriptionChange}\r\n          placeholder=\"What needs to be done?\"\r\n          autoFocus\r\n          value={this.state.description}\r\n        ></input>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import Task from \"./task\";\r\n\r\nexport default Task;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Task extends Component {\r\n  render() {\r\n    let {\r\n      description,\r\n      onDeleted,\r\n      id,\r\n      onToggleDone,\r\n      onToggleEdit,\r\n      done,\r\n      onEditTask,\r\n      edit,\r\n    } = this.props;\r\n\r\n    let classNames = \"\";\r\n\r\n    if (edit) {\r\n      classNames = \"editing\";\r\n    }\r\n    if (done) {\r\n      classNames = \"completed\";\r\n    }\r\n\r\n    return (\r\n      <li key={id} className={classNames}>\r\n        <div className=\"view\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            onClick={onToggleDone}\r\n          ></input>\r\n          <label>\r\n            <span className=\"description\">{description}</span>\r\n            <span className=\"created\">created 5 minutes ago</span>\r\n          </label>\r\n          <button className=\"icon icon-edit\" onClick={onToggleEdit}></button>\r\n          <button className=\"icon icon-destroy\" onClick={onDeleted}></button>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"edit\"\r\n          defaultValue={description}\r\n          onKeyDown={onEditTask}\r\n        ></input>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import TaskList from \"./task-list\";\r\n\r\nexport default TaskList;\r\n","import Task from \"../Task\";\r\n\r\nconst TaskList = ({\r\n  todos,\r\n  onDeleted,\r\n  onToggleDone,\r\n  onToggleEdit,\r\n  onEditTask,\r\n}) => {\r\n  const elem = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <Task\r\n        key={id}\r\n        {...itemProps}\r\n        onDeleted={() => onDeleted(id)}\r\n        onToggleDone={() => onToggleDone(id)}\r\n        onToggleEdit={() => onToggleEdit(id)}\r\n        onEditTask={(e) => onEditTask(id, e)}\r\n      />\r\n    );\r\n  });\r\n  return <ul className=\"todo-list\">{elem}</ul>;\r\n};\r\n\r\nexport default TaskList;\r\n","import TaskFilter from \"./task-filter\";\r\n\r\nexport default TaskFilter;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class TaskFilter extends Component {\r\n  render() {\r\n    const { showActiveTask, showCompletedTask, showAllTask } = this.props;\r\n\r\n    let classNames = \"selected\";\r\n\r\n    return (\r\n      <ul className=\"filters\">\r\n        <li>\r\n          <button className={classNames} onClick={showAllTask}>\r\n            All\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button onClick={showActiveTask}>Active</button>\r\n        </li>\r\n        <li>\r\n          <button onClick={showCompletedTask}>Completed</button>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nconst TaskFilter = () => {\r\n  return (\r\n    <ul className=\"filters\">\r\n      <li>\r\n        <button className=\"selected\">All</button>\r\n      </li>\r\n      <li>\r\n        <button>Active</button>\r\n      </li>\r\n      <li>\r\n        <button>Completed</button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\n*/\r\n","import Footer from \"./footer\";\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nimport TaskFilter from \"../TaskFilter\";\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    const {\r\n      doneCount,\r\n      todoCount,\r\n      showActiveTask,\r\n      showCompletedTask,\r\n      showAllTask,\r\n    } = this.props;\r\n    return (\r\n      <footer className=\"footer\">\r\n        <span className=\"todo-count\">{doneCount} task completed</span>\r\n        <span className=\"todo-count\">{todoCount} task left</span>\r\n        <TaskFilter\r\n          showActiveTask={() => showActiveTask(\"done\")}\r\n          showCompletedTask={() => showCompletedTask(\"done\")}\r\n          showAllTask={() => showAllTask()}\r\n        />\r\n        <button className=\"clear-completed\">Clear completed</button>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import App from \"./app\";\r\n\r\nexport default App;\r\n","import NewTaskForm from \"../NewTaskForm\";\r\nimport TaskList from \"../TaskList\";\r\nimport Footer from \"../Footer\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    taskData: [\r\n      this.createTodoItem(\"first task\"),\r\n      this.createTodoItem(\"second task\"),\r\n      this.createTodoItem(\"third task\"),\r\n    ],\r\n  };\r\n\r\n  createTodoItem(description) {\r\n    return {\r\n      description,\r\n      done: false,\r\n\r\n      edit: false,\r\n      id: this.maxId++,\r\n      text: this.props.description,\r\n    };\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ taskData }) => {\r\n      const idx = taskData.findIndex((el) => el.id === id);\r\n\r\n      const newArray = [...taskData.slice(0, idx), ...taskData.slice(idx + 1)];\r\n\r\n      return {\r\n        taskData: newArray,\r\n      };\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    //gen id\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ taskData }) => {\r\n      const newArr = [...taskData, newItem];\r\n\r\n      return {\r\n        taskData: newArr,\r\n      };\r\n    });\r\n  };\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ taskData }) => {\r\n      return {\r\n        taskData: this.toggleProperty(taskData, id, \"done\"),\r\n      };\r\n    });\r\n  };\r\n  onToggleEdit = (id) => {\r\n    this.setState(({ taskData }) => {\r\n      return {\r\n        taskData: this.toggleProperty(taskData, id, \"edit\"),\r\n      };\r\n    });\r\n  };\r\n\r\n  onEditTask = (id, e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.onToggleEdit(id);\r\n    }\r\n    this.setState(({ taskData }) => {\r\n      const idx = taskData.findIndex((el) => el.id === id);\r\n      const oldItem = taskData[idx];\r\n      const newItem = { ...oldItem, description: e.target.value };\r\n\r\n      const newArray = [\r\n        ...taskData.slice(0, idx),\r\n        newItem,\r\n        ...taskData.slice(idx + 1),\r\n      ];\r\n\r\n      return {\r\n        taskData: newArray,\r\n      };\r\n    });\r\n  };\r\n\r\n  showActiveTask = (propName) => {\r\n    this.setState(({ taskData }) => {\r\n      const taskArr = taskData.filter((el) => !el[propName]);\r\n\r\n      return {\r\n        taskData: taskArr,\r\n      };\r\n    });\r\n  };\r\n  showCompletedTask = (propName) => {\r\n    this.setState(({ taskData }) => {\r\n      const taskArr = taskData.filter((el) => el[propName]);\r\n\r\n      return {\r\n        taskData: taskArr,\r\n      };\r\n    });\r\n  };\r\n  showAllTask = () => {\r\n    this.setState(({ taskData }) => {\r\n      return {\r\n        taskData,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { taskData } = this.state;\r\n    const doneCount = taskData.filter((el) => el.done).length;\r\n    const active = taskData.filter((el) => !el.done);\r\n    const todoCount = taskData.length - doneCount;\r\n\r\n    return (\r\n      <section className=\"todoapp\">\r\n        <div className=\"header\">\r\n          <h1>todos</h1>\r\n        </div>\r\n        <NewTaskForm onAdded={this.addItem} />\r\n        <TaskList\r\n          todos={taskData}\r\n          onDeleted={(id) => this.deleteItem(id)}\r\n          onToggleDone={this.onToggleDone}\r\n          onToggleEdit={this.onToggleEdit}\r\n          onEditTask={this.onEditTask}\r\n        />\r\n        <Footer\r\n          doneCount={doneCount}\r\n          todoCount={todoCount}\r\n          active={active}\r\n          showActiveTask={this.showActiveTask}\r\n          showCompletedTask={this.showCompletedTask}\r\n          showAllTask={this.showAllTask}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\".root\"));\n"],"sourceRoot":""}